// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// GenTableDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type GenTableDao struct {
	gmvc.M                  // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB          // DB is the raw underlying database management object.
	Table   string          // Table is the table name of the DAO.
	Columns genTableColumns // Columns contains all the columns of Table that for convenient usage.
}

// GenTableColumns defines and stores column names for table gen_table.
type genTableColumns struct {
	Id             string // 主键ID
	TableName      string // 表名称
	TableComment   string // 表描述
	ClassName      string // 实体类名称
	TplCategory    string // 使用的模板（crud单表操作 tree树表操作）
	PackageName    string // 生成包路径
	ModuleName     string // 生成模块名
	BusinessName   string // 生成业务名
	FunctionName   string // 生成功能名
	FunctionAuthor string // 生成功能作者
	Options        string // 其它生成选项
	Note           string // 备注
	CreateUser     string // 添加人
	CreateTime     string // 创建时间
	UpdateUser     string // 更新人
	UpdateTime     string // 更新时间
	Mark           string // 有效标识
}

func NewGenTableDao() *GenTableDao {
	return &GenTableDao{
		M:     g.DB("default").Model("gen_table").Safe(),
		DB:    g.DB("default"),
		Table: "gen_table",
		Columns: genTableColumns{
			Id:             "id",
			TableName:      "table_name",
			TableComment:   "table_comment",
			ClassName:      "class_name",
			TplCategory:    "tpl_category",
			PackageName:    "package_name",
			ModuleName:     "module_name",
			BusinessName:   "business_name",
			FunctionName:   "function_name",
			FunctionAuthor: "function_author",
			Options:        "options",
			Note:           "note",
			CreateUser:     "create_user",
			CreateTime:     "create_time",
			UpdateUser:     "update_user",
			UpdateTime:     "update_time",
			Mark:           "mark",
		},
	}
}
