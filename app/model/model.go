// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// SysConfig is the golang structure for table sys_config.
type SysConfig struct {
	Id          uint        `orm:"id,primary"   json:"id"`           // 主键ID
	Name        string      `orm:"name"         json:"name"`         // 分组名称
	Sort        int         `orm:"sort"         json:"sort"`         // 排序
	CreatedBy   uint        `orm:"created_by"   json:"created_by"`   // 添加人
	CreatedAt   *gtime.Time `orm:"created_at"   json:"created_at"`   // 创建时间
	UpdatedBy   uint        `orm:"updated_by"   json:"updated_by"`   // 更新人
	UpdatedAt   *gtime.Time `orm:"updated_at"   json:"updated_at"`   // 最后更新时间
	ConfigName  string      `orm:"config_name"  json:"config_name"`  // ConfigName
	ConfigKey   string      `orm:"config_key"   json:"config_key"`   // ConfigKey
	IsFrontend  string      `orm:"is_frontend"  json:"is_frontend"`  // 是否前台
	CreateBy    int64       `orm:"create_by"    json:"create_by"`    // 创建者
	UpdateBy    int64       `orm:"update_by"    json:"update_by"`    // 更新者
	ConfigValue string      `orm:"config_value" json:"config_value"` // ConfigValue
	ConfigType  string      `orm:"config_type"  json:"config_type"`  // ConfigType
	Remark      string      `orm:"remark"       json:"remark"`       // Remark
	DeletedAt   *gtime.Time `orm:"deleted_at"   json:"deleted_at"`   // 删除时间
}

// SysConfigData is the golang structure for table sys_config_data.
type SysConfigData struct {
	Id        uint        `orm:"id,primary" json:"id"`         // 主键ID
	Title     string      `orm:"title"      json:"title"`      // 配置标题
	Code      string      `orm:"code"       json:"code"`       // 配置编码
	Value     string      `orm:"value"      json:"value"`      // 配置值
	Options   string      `orm:"options"    json:"options"`    // 配置项
	ConfigId  uint        `orm:"config_id"  json:"config_id"`  // 配置分组ID
	Type      string      `orm:"type"       json:"type"`       // 配置类型
	Status    uint        `orm:"status"     json:"status"`     // 状态：1正常 2停用
	Sort      uint        `orm:"sort"       json:"sort"`       // 排序
	Note      string      `orm:"note"       json:"note"`       // 配置说明
	CreatedBy uint        `orm:"created_by" json:"created_by"` // 添加人
	CreatedAt *gtime.Time `orm:"created_at" json:"created_at"` // 添加时间
	UpdatedBy uint        `orm:"updated_by" json:"updated_by"` // 更新人
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updated_at"` // 更新时间
}

// SysMenu is the golang structure for table sys_menu.
type SysMenu struct {
	Id         uint        `orm:"id,primary" json:"id"`         // 主键ID
	Pid        uint        `orm:"pid"        json:"pid"`        // 父级ID
	Title      string      `orm:"title"      json:"title"`      // 菜单标题
	Icon       string      `orm:"icon"       json:"icon"`       // 图标
	Path       string      `orm:"path"       json:"path"`       // 菜单路径
	Component  string      `orm:"component"  json:"component"`  // 菜单组件
	Target     string      `orm:"target"     json:"target"`     // 目标
	Permission string      `orm:"permission" json:"permission"` // 权限标识
	Type       uint        `orm:"type"       json:"type"`       // 类型：0菜单/1按钮
	Status     uint        `orm:"status"     json:"status"`     // 是否显示：0禁用/1正常
	Note       string      `orm:"note"       json:"note"`       // 备注
	Sort       uint        `orm:"sort"       json:"sort"`       // 显示顺序
	CreatedBy  uint        `orm:"created_by" json:"created_by"` // 添加人
	CreatedAt  *gtime.Time `orm:"created_at" json:"created_at"` // 创建时间
	UpdatedBy  uint        `orm:"updated_by" json:"updated_by"` // 更新人
	UpdatedAt  *gtime.Time `orm:"updated_at" json:"updated_at"` // 更新时间
	Visible    string      `orm:"visible"    json:"visible"`    //
	CreateBy   int64       `orm:"create_by"  json:"create_by"`  // 创建者
}

// SysRole is the golang structure for table sys_role.
type SysRole struct {
	Id        uint        `orm:"id,primary" json:"id"`         // 主键ID
	Name      string      `orm:"name"       json:"name"`       // 角色名称
	Code      string      `orm:"code"       json:"code"`       // 角色标签
	Note      string      `orm:"note"       json:"note"`       // 备注
	Sort      uint        `orm:"sort"       json:"sort"`       // 排序
	CreatedBy uint        `orm:"created_by" json:"created_by"` // 添加人
	CreatedAt *gtime.Time `orm:"created_at" json:"created_at"` // 添加时间
	UpdatedBy uint        `orm:"updated_by" json:"updated_by"` // 更新人
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updated_at"` // 更新时间
}

// SysRoleMenu is the golang structure for table sys_role_menu.
type SysRoleMenu struct {
	RoleId uint `orm:"role_id" json:"role_id"` // 角色ID
	MenuId uint `orm:"menu_id" json:"menu_id"` // 菜单ID
}

// SysUser is the golang structure for table sys_user.
type SysUser struct {
	Id        uint        `orm:"id,primary" json:"id"`         // 主键ID
	Nickname  string      `orm:"nickname"   json:"nickname"`   // 昵称
	Username  string      `orm:"username"   json:"username"`   // 登录用户名
	Password  string      `orm:"password"   json:"password"`   // 登录密码
	Salt      string      `orm:"salt"       json:"salt"`       // 盐加密
	Avatar    string      `orm:"avatar"     json:"avatar"`     // 头像
	Mobile    string      `orm:"mobile"     json:"mobile"`     // 手机号码
	Email     string      `orm:"email"      json:"email"`      // 邮箱地址
	Intro     string      `orm:"intro"      json:"intro"`      // 个人简介
	Status    uint        `orm:"status"     json:"status"`     // 状态：1正常 2禁用
	Note      string      `orm:"note"       json:"note"`       // 备注
	LoginNum  uint        `orm:"login_num"  json:"login_num"`  // 登录次数
	LoginIp   string      `orm:"login_ip"   json:"login_ip"`   // 最近登录IP
	LoginTime *gtime.Time `orm:"login_time" json:"login_time"` // 最近登录时间
	CreatedBy uint        `orm:"created_by" json:"created_by"` // 添加人
	CreatedAt *gtime.Time `orm:"created_at" json:"created_at"` // 添加时间
	UpdatedBy uint        `orm:"updated_by" json:"updated_by"` // 更新人
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updated_at"` // 更新时间
}

// SysUserRole is the golang structure for table sys_user_role.
type SysUserRole struct {
	UserId uint `orm:"user_id" json:"user_id"` // 人员ID
	RoleId uint `orm:"role_id" json:"role_id"` // 角色ID
}
