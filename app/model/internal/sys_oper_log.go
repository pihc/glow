// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/os/gtime"
)

// SysOperLog is the golang structure for table sys_oper_log.
type SysOperLog struct {
	Id            int64       `orm:"id,primary"     json:"id"`            // 主键ID
	Title         string      `orm:"title"          json:"title"`         // 日志标题
	LogType       uint        `orm:"log_type"       json:"logType"`       // 操作类型（0其它 1新增 2修改 3删除）
	OperMethod    string      `orm:"oper_method"    json:"operMethod"`    // 操作方法
	RequestMethod string      `orm:"request_method" json:"requestMethod"` // 请求方式
	OperType      uint        `orm:"oper_type"      json:"operType"`      // 操作类型：0其他 1后台用户 2WAP用户
	OperName      string      `orm:"oper_name"      json:"operName"`      // 操作人员
	OperUrl       string      `orm:"oper_url"       json:"operUrl"`       // 请求URL
	OperIp        string      `orm:"oper_ip"        json:"operIp"`        // 主机地址
	OperLocation  string      `orm:"oper_location"  json:"operLocation"`  // 操作地点
	OperParam     string      `orm:"oper_param"     json:"operParam"`     // 请求参数
	JsonResult    string      `orm:"json_result"    json:"jsonResult"`    // 返回参数
	Status        int         `orm:"status"         json:"status"`        // 操作状态（0正常 1异常）
	Note          string      `orm:"note"           json:"note"`          // 备注
	CreateUser    uint        `orm:"create_user"    json:"createUser"`    // 添加人
	CreateTime    *gtime.Time `orm:"create_time"    json:"createTime"`    // 操作时间
	UpdateUser    uint        `orm:"update_user"    json:"updateUser"`    // 更新人
	UpdateTime    *gtime.Time `orm:"update_time"    json:"updateTime"`    // 更新时间
	Mark          uint        `orm:"mark"           json:"mark"`          // 有效标识
}
